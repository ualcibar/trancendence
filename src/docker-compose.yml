version: '3.8'
services:
  frontend:
    container_name: frontend
    build: ./frontend
    volumes:
      - ./frontend/angular:/usr/src/app/
    ports:
      - "1500:80"
      - "1501:443"
    networks:
      - bridge
    depends_on:
      backend:
        condition: service_healthy
 
  postgre:
    container_name: postgre
    image: postgres:latest
    networks:
      - bridge
    env_file:
      - ./.env
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 3s
      timeout: 100s
      retries: 5

  backend:
    container_name: backend
    build: ./backend
    restart: always
    volumes:
      - ./backend:/usr/src/app/
    env_file:
      - ./.env
    networks:
      - bridge
    healthcheck:
      test: ["CMD", "echo", "OK!"]
      interval: 3s
      timeout: 100s
      retries: 5
    depends_on:
      postgre:
        condition: service_healthy

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - bridge


networks:
  bridge:
    driver: bridge

#docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' backend
